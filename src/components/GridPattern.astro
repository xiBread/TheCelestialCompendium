---
import type { HTMLAttributes } from "astro/types";

export type Props = HTMLAttributes<"svg"> & {
	x: number;
	y: number;
	width: number;
	height: number;
	squares: [x: number, y: number][];
};

const { x, y, width, height, squares, ...props } = Astro.props;
---

<svg aria-hidden="true" x-id="['pattern']" {...props}>
	<defs>
		<pattern :id="$id('pattern')" {x} {y} {width} {height} patternUnits="userSpaceOnUse">
			<path d={`M.5 ${height}V.5H${width}`} fill="none"></path>
		</pattern>
	</defs>

	<rect :fill="url(#$id('pattern'))" width="100%" height="100%" stroke-width="0"></rect>

	{
		squares && (
			<svg {x} {y} class="overflow-visible">
				{squares.map(([x, y]) => (
					<rect
						x={x * width}
						y={y * height}
						width={width + 1}
						height={height + 1}
						stroke-width="0"
					/>
				))}
			</svg>
		)
	}
</svg>
