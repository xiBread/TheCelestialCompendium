---
import type { CollectionEntry } from "astro:content";

interface Props {
	entry: CollectionEntry<"archive">;
	mobile?: boolean;
}

const { mobile = false } = Astro.props;

const mdx = await Astro.props.entry.render();
const headings = mdx.headings.filter((h) => h.depth < 4) ?? [];

const top = headings[0];
if (top.depth === 1) top.text = "Overview";
---

{
	mobile ? (
		<div />
	) : (
		<table-of-contents class="hidden xl:sticky xl:top-10 xl:block xl:h-[calc(100dvh-2.5rem)] xl:w-64 xl:flex-none xl:overflow-y-auto xl:border-l xl:border-zinc-900/10 xl:pl-6 xl:pt-8 xl:dark:border-white/10">
			<nav class="mt-2 hidden lg:block">
				<span class="font-semibold">On this page</span>

				<ul class="mt-4">
					{headings.map((heading) => (
						<li class:list={["mt-1", heading.depth === 3 && "ml-6"]}>
							<a class="text-sm transition-colors" href={`#${heading.slug}`}>
								{heading.text}
							</a>
						</li>
					))}
				</ul>
			</nav>
		</table-of-contents>
	)
}

<script src="../lib/contents.ts"></script>

<style>
	a:not([aria-current]) {
		@apply text-slate-500 hover:text-slate-900 dark:text-slate-400 dark:hover:text-white;
	}

	a[aria-current="true"] {
		@apply text-indigo-600 dark:text-indigo-400;
	}
</style>
